"use strict";function ceil(n){return Math.ceil(n)}function round(n){return Math.round(n)}function floor(n){return Math.floor(n)}function 
sqrt(n){return Math.sqrt(n)}function pow(n,t){return Math.pow(n,t)}function abs(n){return Math.abs(n)}function log(n){return Math.log(n)}
function exp(n){return Math.exp(n)}function atan2(n,t){return Math.atan2(n,t)}function norm(n,t,r){return(n-t)*(r-t)}function lerp(n,t,r){
return(r-t)*n+t}function map(n,t,r,i,u){return lerp(norm(n,t,r),i,u)}function clapm(n,t,r){return Math.min(Math.max(n,t),r)}function inRange
(n,t,r){return n>=t&&values<=r}function rangeIntersect(n,t,r,i){return Math.max(n,t)>=Math.min(r,i)&&Math.min(n,t)<=Math.max(r,i)}function 
distance(n,t){return Math.sqrt((t.x-n.x)*(t.x-n.x)+(t.y-n.y)*(t.y-n.y))}function distanceXY(n,t,r,i){return Math.sqrt((r-n)*(r-n)+(i-t)*
(i-t))}function sin(n){return Math.sin(n)}function cos(n){return Math.cos(n)}function tan(n){return Math.tan(n)}function cotan(n){return 
1/tan(n)}function acos(n){return Math.acos(n)}function asin(n){return Math.asin(n)}function atan(n){return Math.atan(n)}function choose()
{return arguments[Math.floor(Math.random()*arguments.length)]}function random(n,t){return Math.floor(n+Math.random()*(t+1-n))}function 
circleCollision(n,t){return distance(n,t)<=n.radius+t.radius}function pointInCircle(n,t,r){return ditanceXY(n,t,r.x,r.y)}function 
rectCollision(n,t){return rangeIntersect(n.x,n.x+n.width,t.x,t.x+t.width)&&rangeIntersect(n.y,n.y+n.height,t.y,t.y+t.height)}function 
pointInRect(n,t,r){return inRange(n,r.x,r.x+r.width)&&inRange(t,r.y,r.y+r.height)}function rectCircleCollision(n,t){var r=abs(n.x-t.x-t.
width/2),i=abs(n.y-t.y-t.height/2);if(r>t.width/2+n.radius)return!1;if(i>t.height/2+n.radius)return!1;if(r<=t.width/2)return!0;if(i<=t.
height/2)return!0;var u=r-t.width/2,a=i-t.height/2;return u*u+a*a<=n.radius*n.radius}
